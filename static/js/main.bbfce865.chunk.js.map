{"version":3,"sources":["api/users.js","api/categories.js","api/products.js","App.jsx","index.jsx"],"names":["id","name","sex","title","icon","ownerId","categoryId","getCategoryById","categoriesFromServer","find","category","App","userSelected","setUserSelected","useState","query","setQuery","visibleProducts","getPreparedProducts","products","option","preparedProducts","normalizedQuery","trim","toLowerCase","filter","product","includes","productsFromServer","isAnyVisibleProducts","length","_jsx","className","children","_jsxs","cn","href","onClick","usersFromServer","map","user","isThisUserSelected","type","placeholder","onChange","event","target","value","userId","isMale","isFemale","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbfce865.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\n// const products = productsFromServer.map((product) => {\n//   const category = null; // find by product.categoryId\n//   const user = null; // find by category.ownerId\n\n//   return null;\n// });\n\nconst getPreparedProducts = (products, option) => {\n  const { query = '', userSelected = null } = option;\n\n  let preparedProducts = [...products];\n\n  const normalizedQuery = query.trim().toLowerCase();\n\n  if (normalizedQuery) {\n    preparedProducts = preparedProducts.filter(product => product.name\n      .toLowerCase().includes(normalizedQuery));\n  }\n\n  if (userSelected !== 'All') {\n    preparedProducts = preparedProducts.filter((product) => {\n      const category = getCategoryById(product.categoryId);\n\n      return category.ownerId === userSelected.id;\n    });\n  }\n\n  return preparedProducts;\n};\n\nconst getCategoryById = categoryId => categoriesFromServer\n  .find(category => category.id === categoryId) || null;\n\nconst getUserById = userId => usersFromServer\n  .find(user => user.id === userId) || null;\n\nexport const App = () => {\n  // const [selectedCategories, setSelectedCategories] = useState([]);\n\n  // const isCategorySelected = ({ id }) => selectedCategories\n  //   .some(category => category.id === id);\n\n  // const addCaterogy = category => {\n  //   setSelectedCategories([...selectedCategories, category]);\n  // };\n\n  // const removeCategory = category => {\n  //   setSelectedCategories(\n  //     selectedCategories.filter(cat => cat.id !== category.id),\n  //   );\n  // };\n\n  const [userSelected, setUserSelected] = useState('All');\n  const [query, setQuery] = useState('');\n\n  const visibleProducts = getPreparedProducts(productsFromServer, {\n    query,\n    userSelected,\n  });\n\n  const isAnyVisibleProducts = visibleProducts.length > 0;\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                className={cn({ 'is-active': userSelected === 'All' })}\n                href=\"#/\"\n                onClick={() => setUserSelected('All')}\n              >\n                All\n              </a>\n\n              {usersFromServer.map((user) => {\n                const { name, id } = user;\n                const isThisUserSelected = name === userSelected.name;\n\n                return (\n                  <a\n                    data-cy=\"FilterUser\"\n                    className={cn({ 'is-active': isThisUserSelected })}\n                    href=\"#/\"\n                    onClick={() => setUserSelected(user)}\n                    key={id}\n                  >\n                    {name}\n                  </a>\n                );\n              })}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  onChange={event => setQuery(event.target.value)}\n                  value={query}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {query && (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      data-cy=\"ClearButton\"\n                      onClick={() => setQuery('')}\n                      type=\"button\"\n                      className=\"delete\"\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className=\"button is-success mr-6 is-outlined\"\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(category => (\n                <a\n                  data-cy=\"Category\"\n                  // is-info\n                  className=\"button mr-2 my-1\"\n                  href=\"#/\"\n                  key={category.id}\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => {\n                  setQuery('');\n                  setUserSelected('All');\n                }}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {isAnyVisibleProducts ? (\n            <table\n              data-cy=\"ProductTable\"\n              className=\"table is-striped is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      ID\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Product\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort-down\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Category\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      User\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {visibleProducts.map((product) => {\n                  const category = getCategoryById(product.categoryId);\n                  const user = getUserById(category.ownerId);\n                  const isMale = user.sex === 'm';\n                  const isFemale = user.sex === 'f';\n\n                  return (\n                    <tr data-cy=\"Product\" key={product.id}>\n                      <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                        {product.id}\n                      </td>\n\n                      <td data-cy=\"ProductName\">{product.name}</td>\n                      <td data-cy=\"ProductCategory\">{`${category.icon} - ${category.title}`}</td>\n\n                      <td\n                        data-cy=\"ProductUser\"\n                        className={cn({\n                          'has-text-link': isMale,\n                          'has-text-danger': isFemale,\n                        })}\n                      >\n                        {user.name}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          ) : (\n            <p data-cy=\"NoMatchingMessage\">\n              No products matching selected criteria\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}